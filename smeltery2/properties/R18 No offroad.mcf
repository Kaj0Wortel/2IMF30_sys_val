nu X(cartLoc: Nat -> Nat = cartInit, sw: Switch = init_switch) .
	( forall c: Nat . val(c < 4) => forall r: Nat . val(r <= 8) => [cartAtRail(c, rail(r))] X(cartLoc[c -> r], sw) ) &&
	( forall s: Nat . val(s < 3) => [switchRail(s)] X(cartLoc, switch(s)) ) &&
	( forall c: Nat . val(c < 4) => [moveCartForward(c)] val(allow_next(rail(cartLoc(c)), sw)) && X(cartLoc, sw) ) &&
	( forall c: Nat . val(c < 4) => [moveCartBackward(c)] val(allow_prev(rail(cartLoc(c)))) && X(cartLoc, sw) ) &&
	( forall c: Nat . val(c < 4) => forall r: Rail . val(id(r) <= 8) => forall s: Nat . val(s < 3) =>
		[!cartAtRail(c, r) && !switchRail(s) && !moveCartForward(c) && !moveCartBackward(c)] X(cartLoc, sw) )