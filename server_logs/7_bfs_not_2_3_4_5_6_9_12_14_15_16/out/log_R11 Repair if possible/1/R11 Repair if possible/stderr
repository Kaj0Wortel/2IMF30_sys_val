+ lps2pbes -v '--formula=../properties/R11 Repair if possible.mcf' --counter-example smeltery2.lps 'smeltery2_R11 Repair if possible.pbes'
Guessing output format: PBES in internal format
reading LPS from file 'smeltery2.lps'...
Loading LPS from smeltery2.lps.
reading input from file '../properties/R11 Repair if possible.mcf'...
type checking state formula...
converting state formula and LPS to a PBES...
writing PBES to file 'smeltery2_R11 Repair if possible.pbes'...
Saving result in pbes format...
+ pbessolve -v --strategy=3 --rewriter=jittyc '--evidence-file=evidence/smeltery2_R11 Repair if possible.evidence.lps' --search=breadth-first --file=smeltery2.lps 'smeltery2_R11 Repair if possible.pbes'
Guessing input format: PBES in internal format
using '/usr/bin/mcrl2compilerewriter' to compile rewriter.
generated ./jittyc_1176_21082992.cpp in 105ms, compiling...
compiled in 45128ms, loading rewriter...
rewriter loaded successfully.
Generating parity game...

Number of vertices in the structure graph: 10
Replacing free variables with dummy values.
Solving parity game...
Extracting evidence...
Saved counter example in evidence/smeltery2_R11 Repair if possible.evidence.lps
+ rm -f 'smeltery2_R11 Repair if possible.pbes'
